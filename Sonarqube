Sonar qube

link:
https://www.crestdatasys.com/blogs/an-introduction-on-using-sonarqube/#:~:text=SonarQube%20is%20a%20Code%20Quality,be%20measured%20continually%20over%20time.

.SonarQube is a Code Quality Assurance tool that collects and analyzes source code, and provides reports for the code quality of your project.
.It combines static and dynamic analysis tools and enables quality to be measured continually over time. Everything from minor styling choices, to design errors are inspected and evaluated by SonarQube. This provides users with a rich searchable history of the code to analyze where the code is messing up and determine whether or not it is styling issues, code defeats, code duplication, lack of test coverage, or excessively complex code.
.The software will analyze source code from different aspects and drills down the code layer by layer, moving module level down to the class level, with each level producing metric values and statistics that should reveal problematic areas in the source code that needs improvement.
****************************************
Quality profile and Quality gate:
Every project has a quality profile set for each supported language. The profile defines which rules will be applied during analysis. After analysis, the quality gate takes the resulting metrics and compares them to its defined thresholds to determine if the code meets the requirements for release or merge

Quality Profiles are a core component of SonarQube, since they are where you define sets of Rules that when violated should raise issues on your codebase (example: Methods should not have a Cognitive Complexity higher than 15). Quality Profiles are defined for individual languages.

Quality Gates are the set of conditions a project must meet before it should be pushed to further environments. Quality Gates considers all of the quality metrics for a project and assigns a passed or failed designation for that project.
What are the different types of quality gates?
Gates of Quality
1) Creating a Quality Strategy.
2) Concise User Stories and Acceptance.
3) Creating Test Scenarios.
4) Pair Testing with Developers.
5) Performing Manual Verification.
6) Automated Regression Test.

A Quality Gate outputs a status (Pass, Warn, Fail)

Go to Manage Jenkins > Configure System and scroll down to the SonarQube servers section

*************************************************

plugins:
Plugins are the primary means of enhancing the functionality of a Jenkins environment to suit organization- or user-specific needs. 
A plug-in is a piece of software that adds new features or extends functionality on an existing application.
**************************************

Rolling update: Rolling release, also known as rolling update or continuous delivery, is a concept in software development of frequently delivering updates to applications. 

libk:https://medium.com/codex/kubernetes-deployment-rolling-updates-and-rollbacks-explained-e3efa6557368

The Rolling update uses two important parameters. They are listed below.

1. maxSurge

2. maxUnavailable

1. maxSurge => Here we assigned 25%. This ensures at most 125% of the desired number of Pods are up and running. Assume we have four Pods. So the 25% is equal to one Pod. This ensures 5 Pods are up and running if the traffic increases.

2. maxUnavailable => Here we assigned 25%. This ensures at most 75% of the desired number of Pods are up and running. Assume we have four Pods. So the 25% is equal to one Pod. This ensures a minimum of three Pods are up and running always.

*************************************************************************
Rollout: The ability to deploy lates minor version (bugfix, hotfix, minor feature, enhancement) without downtime. Rollback: The ability to restore back the older working version in case something goes wrong.

***************************************************************************
